<!-- Use preprocessors via the lang attribute! e.g. <template lang="pug"> -->
	<template>
		<div id="app">
		  <h1>{{message}}</h1>
	  
		  <table id="mytable">
		<tr>
		  <th>Name</th>
		  <th>Email</th>
		  <th>Password</th>
		  <th>Gender</th>
		  <th>Actions</th>
		</tr>
		 <tr v-for="patient in patients" :key="patient.email">
		  <td>{{patient.firstname}} {{patient.lastname}}</td>
		  <td>{{patient.email}}</td>
		  <td>{{patient.password}}</td>
		  <td> - </td>
		   <td>
			 
			 <button @click="editP(patient)" >edit</button>
			 <button @click="deleteP(patient)" >delete</button>
		   </td>
		</tr>
	  </table>
		  
		  <form name="patientForm" id="patientForm1234" class="mform">
		
		<div>
		<label for="firstname" style="color:red;">Firstname</label>
		<input v-model="patient.firstname" class="form-input class2 class3" type="text" name="firstname" id="firstname" required placeholder="Enter your firstname here ...">
		</div><div>
		  <label for="lastname">Lastname</label>
		<input v-model="patient.lastname" class="form-input" type="text" name="lastname" id="lastname" required placeholder="Enter your firstname here ...">
		 </div><div>
		  <label for="firstname">Email</label>
		<input v-model="patient.email" type="email" name="email" id="email" required >
		 </div>
		<div>
		  <label for="firstname">Password</label>
		<input v-model="patient.password" type="password" name="password" id="password" required>
		 </div>
		 <div>
		  <label for="gender">Gender</label>
		   <select name="gender" id="gender">
			 <option>Male</option>
			 <option>Female</option>
			 <option>Other</option>
		   </select>
		 </div>
		<div>
		  <label for="bday">Birthdate</label>
		<input type="date" name="bday" id="bday" required>
		</div>
		
		<div>
		  <label for="address">address</label>
		  <textarea  name="address" id="address">
			
		  </textarea>
		</div>
		<input type="tel" name="phone" id="phone" required>
		 <input type="checkbox" name="terms" id="terms" required>
		
		<input type="radio" name="terms" id="terms" value="Yes" required> Yes
		<input type="radio" name="terms" id="terms" value="No" required> No
		
		
		<button type="button" @click="saveForm">
		  Save / submit
		</button>
	  </form>
		   <button type="button" @click="saveData">
		  Save Test
		</button>

        <button type="button" @click="editP">
            Edit patient
        </button>

        <button type="button" @click="deleteP">
            delete patient
        </button>

        <button type="button" @click="loadData">
            load patients
        </button>

		</div>
	  </template>
	  
	  <script>
	  export default {
		data() {
		  return {
			message: 'Welcome to Vue!',
			patients: [
			  
			],
			patient: {
			  firstname: "",
			  lastname: "",
			  email: "",
			  password: ""
			}
			
		  };
		},
		mounted() {
			this.loadData()
		},
		methods: {

        //Edit an existing patient
		  editP(patient) {
			this.patient = patient
			fetch('http://localhost:3000/patients/'+patient.id, {
			method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(patient)
             })
            .then(response => response.json())
            .then(data => {

            const index = this.patients.findIndex(p => p.id === data.id);
            this.patients.splice(index, 1, data);

            this.patient = {
            firstname: '',
            lastname: '',
            email: '',
            password: ''
            };
        })
        .catch(error => {
            console.error('Error:', error);
        });
                        },
        //Delete an existing patient
		  deleteP(patient) {
            fetch('http://localhost:3000/patients/' + patient.id, {
                method: 'DELETE'
                })
            .then(response => {
			    const index = this.patients.findIndex(p => p.email === patient.email);
                this.patients.splice(index, 1);})
            .catch(error => {
                console.error('Error:', error);
            });
		  },

        //Save my data
		  saveData() {
            fetch('http://localhost:3000/patients', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(this.patient)
        })
            .then(response => response.json())
            .then(data => {
    
            this.patients.push(data);
            this.patient = {
            firstname: '',
            lastname: '',
            email: '',
            password: ''
            };
        })
            .catch(error => {
                console.error('Error:', error);
            }); 
		  },


		  loadData() {
            fetch("http://localhost:3000/patients/1")
            .then(response => response.json())
            .then(data => {
                this.patients = data;
            })
            .catch(error => {
                console.error('Error:', error);
            });
		  },


		  saveForm() {
			this.patients.push(this.patient)
			this.patient = {
			  firstname: "",
			  lastname: "",
			  email: "",
			  password: ""
			}
		  }
		  
		}
		
	  };
	  </script>
	  

	  <!-- Use preprocessors via the lang attribute! e.g. <style lang="scss"> -->
	  <style>
	  #app {
		font-family: Avenir, Helvetica, Arial, sans-serif;
		text-align: center;
		color: #2c3e50;
		margin-top: 60px;
	  }
	  
	  a,
	  button {
		color: #4fc08d;
	  }
	  
	  button {
		background: none;
		border: solid 1px;
		border-radius: 2em;
		font: inherit;
		padding: 0.75em 2em;
	  }
	  </style>
